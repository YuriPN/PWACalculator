{"version":3,"sources":["components/Button.jsx","main/Calculator.jsx","components/Display.jsx","serviceWorker.js","index.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","__webpack_exports__","props","a","createElement","onClick","e","click","label","className","concat","operation","double","triple","initialState","displayValue","clearDisplay","values","current","Calculator","_this","Object","C_Users_Yuri_Documents_calculatorGithubIO_PWACalculator_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","C_Users_Yuri_Documents_calculatorGithubIO_PWACalculator_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","C_Users_Yuri_Documents_calculatorGithubIO_PWACalculator_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","state","C_Users_Yuri_Documents_calculatorGithubIO_PWACalculator_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","clearMemory","bind","C_Users_Yuri_Documents_calculatorGithubIO_PWACalculator_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","setOperation","addDigit","setState","equals","currentOperation","C_Users_Yuri_Documents_calculatorGithubIO_PWACalculator_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","eval","digit","includes","i","newValue","parseFloat","react__WEBPACK_IMPORTED_MODULE_8___default","_components_Display__WEBPACK_IMPORTED_MODULE_11__","value","_components_Button__WEBPACK_IMPORTED_MODULE_10__","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","react_default","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.76a53c93.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Button.css';\r\n\r\n\r\nexport default props =>\r\n    <button \r\n        onClick={e => props.click && props.click(props.label)}\r\n        className={`\r\n            button\r\n            ${props.operation ? 'operation':''}\r\n            ${props.double ? 'double':''}\r\n            ${props.triple ? 'triple':''}\r\n        `}>\r\n        {props.label}\r\n    </button>","import React, {Component} from 'react';\r\nimport './Calculator.css';\r\nimport Button from '../components/Button';\r\nimport Display from '../components/Display';\r\n\r\nconst initialState = {\r\n    displayValue: '0',\r\n    clearDisplay: false,\r\n    operation: null,\r\n    values: [0, 0],\r\n    current: 0\r\n}\r\n\r\nexport default class Calculator extends Component{\r\n\r\n    state = {...initialState}\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.clearMemory = this.clearMemory.bind(this);\r\n        this.setOperation = this.setOperation.bind(this);\r\n        this.addDigit = this.addDigit.bind(this);\r\n    }\r\n    clearMemory(){\r\n        this.setState({...initialState})\r\n    }\r\n    setOperation(operation){\r\n        if(this.state.current === 0){\r\n            this.setState({operation, current: 1, clearDisplay: true});\r\n        }else{\r\n            const equals = operation === '=';\r\n            const currentOperation = this.state.operation;\r\n\r\n            const values = [...this.state.values];\r\n            try{\r\n                values[0] = eval(`${values[0]} ${currentOperation} ${values[1]}`);\r\n            } catch(e){\r\n                values[0] = this.state.values[0];\r\n            }\r\n            \r\n            values[1] = 0;\r\n\r\n            this.setState({\r\n                displayValue: values[0], \r\n                operation: equals ? null : operation,\r\n                current: equals ? 0 : 1,\r\n                clearDisplay: !equals,\r\n                values\r\n            })\r\n        }\r\n    }\r\n    addDigit(digit){\r\n        if(digit === '.' && this.state.displayValue.includes('.')){\r\n            return;\r\n        }\r\n\r\n        const clearDisplay = this.state.displayValue === '0'\r\n            || this.state.clearDisplay;\r\n        const currentValue = clearDisplay ? '' : this.state.displayValue;\r\n        const displayValue = currentValue + digit;\r\n\r\n        this.setState({displayValue, clearDisplay: false});\r\n\r\n        if(digit !== '.'){\r\n            const i = this.state.current;\r\n            const newValue = parseFloat(displayValue);\r\n            const values = [...this.state.values];\r\n            values[i] = newValue;\r\n            this.setState({values});\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className='calculator'>\r\n                <Display value={this.state.displayValue}/>\r\n                <Button label='AC' click={this.clearMemory} triple/>\r\n                <Button label='/' click={this.setOperation} operation/>\r\n                <Button label='7' click={this.addDigit}/>\r\n                <Button label='8' click={this.addDigit}/>\r\n                <Button label='9' click={this.addDigit}/>\r\n                <Button label='*' click={this.setOperation} operation/>\r\n                <Button label='4' click={this.addDigit}/>\r\n                <Button label='5' click={this.addDigit}/>\r\n                <Button label='6' click={this.addDigit}/>\r\n                <Button label='-' click={this.setOperation} operation/>\r\n                <Button label='1' click={this.addDigit}/>\r\n                <Button label='2' click={this.addDigit}/>\r\n                <Button label='3' click={this.addDigit}/>\r\n                <Button label='+' click={this.setOperation} operation/>\r\n                <Button label='0' click={this.addDigit} double/>\r\n                <Button label='.' click={this.addDigit}/>\r\n                <Button label='=' click={this.setOperation} operation/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './Display.css';\r\n\r\nexport default props =>\r\n    <div className='display'>{props.value}</div>","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Calculator from './main/Calculator';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <div>\r\n        <h1>Calculadora</h1>\r\n        <Calculator />\r\n    </div>\r\n    , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PRA\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}